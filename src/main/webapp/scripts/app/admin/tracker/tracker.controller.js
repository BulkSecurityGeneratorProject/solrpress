// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  angular.module('solrpressApp').config(function($stateProvider) {
    $stateProvider.state('tracker', {
      parent: 'admin',
      url: '/tracker',
      data: {
        roles: ['ROLE_ADMIN']
      },
      views: {
        'content@': {
          templateUrl: 'scripts/app/admin/tracker/tracker.html',
          controller: 'TrackerController'
        }
      },
      resolve: {
        mainTranslatePartialLoader: [
          '$translate', '$translatePartialLoader', function($translate, $translatePartialLoader) {
            $translatePartialLoader.addPart('tracker');
            return $translate.refresh();
          }
        ]
      }
    });
  }).controller('TrackerController', function($scope) {
    $scope.activities = [];
    $scope.trackerSocket = atmosphere;
    $scope.trackerSubSocket;
    $scope.trackerTransport = 'websocket';
    $scope.trackerRequest = {
      url: 'websocket/tracker',
      contentType: 'application/json',
      transport: $scope.trackerTransport,
      trackMessageLength: true,
      reconnectInterval: 5000,
      enableXDR: true,
      timeout: 60000
    };
    $scope.trackerRequest.onOpen = function(response) {
      $scope.trackerTransport = response.transport;
      $scope.trackerRequest.uuid = response.request.uuid;
    };
    $scope.trackerRequest.onMessage = function(response) {
      var activity, existingActivity, index, message;
      activity = void 0;
      existingActivity = void 0;
      index = void 0;
      message = void 0;
      message = response.responseBody;
      activity = atmosphere.util.parseJSON(message);
      existingActivity = false;
      index = 0;
      while (index < $scope.activities.length) {
        if ($scope.activities[index].uuid === activity.uuid) {
          existingActivity = true;
          if (activity.page === 'logout') {
            $scope.activities.splice(index, 1);
          } else {
            $scope.activities[index] = activity;
          }
        }
        index++;
      }
      if (!existingActivity) {
        $scope.activities.push(activity);
      }
      $scope.$apply();
    };
    $scope.trackerSubSocket = $scope.trackerSocket.subscribe($scope.trackerRequest);
  });

}).call(this);
