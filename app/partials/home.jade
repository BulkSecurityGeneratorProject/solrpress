h1.text-center Kewl brunch skeleton walkthrough

p.lead.
  Angular apps are client-side apps, often single-page.
  They land their code on the client, then load on demand data from the server using AJAX.
  Unlike regular web pages (without AJAX) when all the content is generated by the server, when the content changes,
  useful indicators provided by the browser are not triggered (loading bar, error messages,...).
  Moreover, nothing indicates to the user something is happening, preventing him to diagnostic an eventual error.
  Angular provides all the tools we need to address this lacks.
  Let's walk together though this boilerplate code to start an Angular app capable of communicating elegantly with APIs.

ol

  li
    h2 Starting a new brunch project
      small  The beginning of all good story

    :markdown
      To start a client-only app easily, I suggest using tools like [Brunch](http://brunch.io),
      [Yeoman](http://yeoman.io/) or [ngTailor](http://lauterry.github.io/ngTailor/).

      Let's use Brunch and generate a project based on the [@vbrajon](http://vbrajon.fr)'s
      [brunch skeleton](https://github.com/vbrajon/brunch-skeleton):

          brunch new gh:vbrajon/brunch-skeleton kewl-app
          cd kewl-app
          brunch watch --server

      And watch your app live on http://localhost:3333 !

    .tip
      :markdown
        You can publish you client-side app really easily on Github pages by inititing a repo in your `public` folder,
        switching to gh-pages branch, commiting all files there and pushing to your repo on Github.
        See the README file for more info.
